
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xac\x0e\xce\xc6\x1c\x11\xc9\xb6\xa9\x10\xf0\x90\x17P\xff\x05'
    
_lr_action_items = {'MAP':([12,15,17,18,19,20,25,28,38,39,40,41,42,43,],[17,17,17,-6,17,17,17,17,-11,-7,-10,-5,17,17,]),'LBRACE':([15,18,25,38,39,40,41,],[23,-6,23,-11,-7,-10,-5,]),'BAR':([15,16,18,24,25,26,32,36,38,39,40,41,44,],[-21,27,-6,-19,-17,-20,-15,-18,-11,-7,-10,-5,-16,]),'LPAREN':([12,15,17,18,19,20,25,28,38,39,40,41,42,43,],[20,20,20,-6,20,20,20,20,-11,-7,-10,-5,20,20,]),'DATA':([0,],[5,]),'EQUAL':([8,9,10,],[11,12,13,]),'RBRACE':([18,23,34,35,38,39,40,41,48,49,],[-6,32,44,-13,-11,-7,-10,-5,-12,-14,]),'LBRACKET':([12,15,17,18,19,20,25,28,38,39,40,41,42,43,],[19,19,19,-6,19,19,19,19,-11,-7,-10,-5,19,19,]),'COMMA':([18,31,35,38,39,40,41,47,48,],[-6,42,45,-11,-7,-10,-5,42,-12,]),'CONID':([5,6,7,11,12,13,15,17,18,19,20,25,27,28,38,39,40,41,42,43,],[8,9,10,15,18,15,18,18,-6,18,18,18,15,18,-11,-7,-10,-5,18,18,]),'VARID':([23,45,],[33,33,]),'RPAREN':([18,30,31,38,39,40,41,46,47,],[-6,40,41,-11,-7,-10,-5,-9,-8,]),'RBRACKET':([18,29,38,39,40,41,],[-6,39,-11,-7,-10,-5,]),'DCOLON':([33,],[43,]),'TYPE':([0,],[6,]),'NEWTYPE':([0,],[7,]),'$end':([1,2,3,4,14,15,16,18,21,22,24,25,26,32,36,37,38,39,40,41,44,],[0,-3,-1,-2,-24,-21,-22,-6,-4,-25,-19,-17,-20,-15,-18,-23,-11,-7,-10,-5,-16,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'typedecl':([0,],[1,]),'assignments':([23,45,],[34,49,]),'typetypedecl':([0,],[3,]),'assignment':([23,45,],[35,35,]),'constructors':([11,27,],[14,37,]),'datatypedecl':([0,],[4,]),'type_record':([15,25,],[24,24,]),'newtypedecl':([0,],[2,]),'comma_separated_types':([20,42,],[30,46,]),'constructor':([11,13,27,],[16,22,16,]),'type':([12,15,17,19,20,25,28,42,43,],[21,25,28,29,31,25,38,47,48,]),'types':([15,25,],[26,36,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> typedecl","S'",1,None,None,None),
  ('typedecl -> typetypedecl','typedecl',1,'p_typedecl','./main.py',91),
  ('typedecl -> datatypedecl','typedecl',1,'p_typedecl','./main.py',92),
  ('typedecl -> newtypedecl','typedecl',1,'p_typedecl','./main.py',93),
  ('typetypedecl -> TYPE CONID EQUAL type','typetypedecl',4,'p_typetypedecl','./main.py',97),
  ('type -> LPAREN type RPAREN','type',3,'p_type_paren','./main.py',101),
  ('type -> CONID','type',1,'p_type_conid','./main.py',105),
  ('type -> LBRACKET type RBRACKET','type',3,'p_type_list','./main.py',109),
  ('comma_separated_types -> type COMMA type','comma_separated_types',3,'p_comma_separated_types_2','./main.py',113),
  ('comma_separated_types -> type COMMA comma_separated_types','comma_separated_types',3,'p_comma_separated_types_more','./main.py',117),
  ('type -> LPAREN comma_separated_types RPAREN','type',3,'p_type_tuple','./main.py',121),
  ('type -> MAP type type','type',3,'p_type_map','./main.py',125),
  ('assignment -> VARID DCOLON type','assignment',3,'p_assignment','./main.py',130),
  ('assignments -> assignment','assignments',1,'p_assignments','./main.py',136),
  ('assignments -> assignment COMMA assignments','assignments',3,'p_assignments','./main.py',137),
  ('type_record -> LBRACE RBRACE','type_record',2,'p_type_record','./main.py',145),
  ('type_record -> LBRACE assignments RBRACE','type_record',3,'p_type_record','./main.py',146),
  ('types -> type','types',1,'p_types','./main.py',154),
  ('types -> type types','types',2,'p_types','./main.py',155),
  ('types -> type_record','types',1,'p_types_type_record','./main.py',163),
  ('constructor -> CONID types','constructor',2,'p_constructor','./main.py',168),
  ('constructor -> CONID','constructor',1,'p_constructor','./main.py',169),
  ('constructors -> constructor','constructors',1,'p_constructors','./main.py',177),
  ('constructors -> constructor BAR constructors','constructors',3,'p_constructors','./main.py',178),
  ('datatypedecl -> DATA CONID EQUAL constructors','datatypedecl',4,'p_datatypedecl','./main.py',186),
  ('newtypedecl -> NEWTYPE CONID EQUAL constructor','newtypedecl',4,'p_newtypedecl','./main.py',190),
]
